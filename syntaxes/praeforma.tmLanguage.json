{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Pr√¶forma",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.praeforma",
          "begin": "@@",
          "end": "\n"
        },
        {
          "name": "comment.block.praeforma",
          "begin": "@\\[",
          "end": "@\\]"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.praeforma",
          "match": "(?<!@)\\b(break|case|catch|default|do|else|finally|for|if|loop|next|return|switch|try|unless|while|yield)\\b"
        },
        {
          "name": "storage.type.praeforma",
          "match": "(?<!@)\\b(interface|let|struct|var|void)\\b"
        },
        {
          "name": "constant.language.praeforma",
          "match": "(?<!@)\\b(false|nil|true)\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "keyword.other.preprocessor.praeforma",
          "match": "@#[0-9a-zA-Z_]+"
        },
        {
          "name": "constant.language.symbol.atomkeyword.praeforma",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*:"
        },
        {
          "name": "constant.language.symbol.keyword.atom.praeforma",
          "match": "@[a-zA-Z0-9_]+:"
        },
        {
          "match": "\\[\\s*([a-zA-Z][a-zA-Z0-9_]*)(?=\\s*\\])",
          "captures": {
            "1": {
              "name": "constant.language.symbol.keyword.unary.praeforma"
            }
          }
        },
        {
          "match": "\\[\\s*(@[a-zA-Z0-9_]+)(?=\\s*\\])",
          "captures": {
            "1": {
              "name": "constant.language.symbol.keyword.unary.praeforma"
            }
          }
        },
        {
          "name": "variable.other.praeforma",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.praeforma",
          "match": "@[a-zA-Z0-9_]+\\b"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.praeforma",
          "match": "\\.?[0-9][0-9a-zA-Z_.]*"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.praeforma",
          "match": "=|:|&&|&&=|\\|\\||\\|\\|=|/|/=|==|=>|>|>=|!|<|<=|-|-=|--|%|%=|\\*|\\*=|!=|\\||\\+|\\+=|\\+\\+|\\?"
        },
        {
          "name": "meta.decorator.praeforma",
          "match": ",|\\.|\\.\\.|;"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.praeforma",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.praeforma",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.praeforma",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.praeforma",
              "match": "\\\\."
            }
          ]
        }
      ]
    }
  },
  "scopeName": "source.praeforma"
}